{
 "add_total_row": 1, 
 "creation": "2022-01-31 06:56:57.937705", 
 "disable_prepared_report": 0, 
 "disabled": 0, 
 "docstatus": 0, 
 "doctype": "Report", 
 "idx": 0, 
 "is_standard": "Yes", 
 "letter_head": "SB LETTER HEAD 1", 
 "modified": "2022-02-08 20:47:28.543466", 
 "modified_by": "Administrator", 
 "module": "Reports", 
 "name": "Sales Person Selling History - Matching", 
 "owner": "Administrator", 
 "prepared_report": 0, 
 "query": "select actual.sales_person                                         as 'Sales Person:Link/Sales Person:180',\n         actual.sales                                               as 'Grand Total:Currency:120',\n         actual.cogs                                                 as 'COGS:Currency:120',\n         case when to_bill.pending is null then 0 else to_bill.pending end as 'Unbilled:Currency:120',\n       case when actual.sales_person = 'No Sales Person' then 0 else \n         (actual.cogs -  (case when to_bill.pending is null then 0 else to_bill.pending end)) end as 'Effective COGS:Currency:120',\n         actual.sales - (actual.cogs - (case when to_bill.pending is null then 0 else to_bill.pending end))                             as 'Profit:Currency:120',\n         ((actual.sales - (actual.cogs - (case when to_bill.pending is null then 0 else to_bill.pending end))) / actual.sales) * 100 as 'Margin:Percent:120'\n  from\n\n\n  (\nselect full_cogs.sales_person, full_sales.sales, full_cogs.cogs from (\nselect case when a.sales_person is null then 'No Sales Person' else a.sales_person end as sales_person, cogs from (\nselect st.sales_person, sum(debit-credit) as cogs from `tabGL Entry` as gle\nleft outer join `tabSales Team` as st on st.parent = gle.voucher_no where\naccount = 'COST OF SALES - SB' and gle.posting_date between %(from_date)s and %(to_date)s\ngroup by st.sales_person ) as a) as full_cogs\nleft outer join (\nselect case when b.sales_person is null then 'No Sales Person' else b.sales_person end as sales_person, sales from (\nselect st.sales_person, sum(credit-debit) as sales from `tabGL Entry` as gle\nleft outer join `tabSales Team` as st on st.parent = gle.voucher_no where\naccount = 'SALES ACCOUNT - SB' and gle.posting_date between %(from_date)s and %(to_date)s\ngroup by st.sales_person) as b) full_sales on full_cogs.sales_person = full_sales.sales_person) as actual\nleft outer join (\n\nselect st.sales_person, sum(dn_pending.pending) as pending from (\nselect\ndni.parent as 'delivery_note',\n(dni.qty-dni.billed_qty)*valuation_rate as 'pending'\nfrom `tabDelivery Note Item` as dni\njoin `tabDelivery Note` as dn on dn.name = dni.parent\nleft outer join (select valuation_rate, item_code, voucher_detail_no from\n(select valuation_rate, item_code,posting_date, voucher_detail_no from\n`tabStock Ledger Entry` where valuation_rate > 0 AND is_cancelled = 'No' AND voucher_type='Delivery Note'\norder by posting_date desc) as temp\ngroup by item_code, voucher_detail_no) as val on (val.item_code = dni.item_code and dni.name = val.voucher_detail_no)\nwhere billed_qty < qty and dn.status not in ('Draft', 'Cancelled')\nand dn.status in ('To Bill')\nAND (dn.posting_date) >= %(from_date)s\nAND (dn.posting_date) <= %(to_date)s ) as dn_pending\nleft outer join `tabSales Team` as st on st.parent = dn_pending.delivery_note\ngroup by st.sales_person) as to_bill on to_bill.sales_person = actual.sales_person", 
 "ref_doctype": "Sales Invoice", 
 "report_name": "Sales Person Selling History - Matching", 
 "report_type": "Query Report", 
 "roles": [
  {
   "role": "Accounts User"
  }, 
  {
   "role": "Accounts Manager"
  }, 
  {
   "role": "STORE"
  }, 
  {
   "role": "POS - COUNTER"
  }, 
  {
   "role": "POS"
  }, 
  {
   "role": "FINANCE - MGMT."
  }, 
  {
   "role": "BASIC PERMISSIONS FOR ENTRIES & REPORTS"
  }
 ]
}